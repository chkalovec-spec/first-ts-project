{"version":3,"sources":["api/index.ts","utils/index.ts","Components/Main/Main.tsx","Components/Clock/Clock.tsx","Components/Nav/Nav.tsx","Components/Todos/TodoInput.tsx","assets/trash.svg","Components/Todos/TodoList.tsx","Components/Todos/TodosContainer.tsx","Components/Movie/MovieContainer.tsx","App.tsx","index.tsx"],"names":["MOVIE_LANGUAGE","generateRandomNumber","num","Math","floor","random","MOVIE_BASE_URL","MOVIE_POPULAR","MOVIE_API_KEY","fetchRandomMovie","a","randomMovieData","title","overview","date","poster","id","totalPages","totalResultsOnPage","Axios","get","RU","then","resp","data","total_pages","results","length","randomPage","randomMovie","result","release_date","slice","poster_path","fetchDogImage","message","Main","useState","image","setImage","isLoadingDogImage","setIsLoadingDogImage","useEffect","loadDogImage","className","type","onClick","role","src","alt","Clock","Date","toLocaleTimeString","time","setTime","tick","setInterval","timeHandler","clearInterval","Nav","to","TodoInput","onChangeHandler","onKeyPressHandler","onClearHandler","onAddHandler","htmlFor","aria-describedby","placeholder","value","onChange","onKeyPress","disabled","TodoList","todos","onToogleHandler","onRemoveHandler","TodoItem","todo","checked","completed","trashIcon","map","item","key","TodosContainer","setTitle","setTodos","savedTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","newTodo","event","target","window","confirm","filter","MovieContainer","movieData","setMovieData","isLoadingMovieData","setIsLoadingMovieData","loadMovieData","href","rel","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf9a6a27.chunk.js","sourcesContent":["import { MovieData } from './../Types/Movie'\r\nimport { generateRandomNumber } from './../utils/index'\r\nimport Axios from 'axios'\r\n\r\nconst RANDOM_DOG_IMAGE_URL = 'https://dog.ceo/api/breeds/image/random'\r\n\r\nconst MOVIE_BASE_URL = 'https://api.themoviedb.org/3/movie/'\r\nconst MOVIE_POPULAR = 'popular'\r\nconst MOVIE_API_KEY = 'f63141006d75850dfb3075bf547fa7f4'\r\nconst MOVIE_IMAGE_URL = 'https://image.tmdb.org/t/p/w780/'\r\nenum MOVIE_LANGUAGE {\r\n  EN = 'en-US',\r\n  RU = 'ru-RU',\r\n}\r\n\r\nexport const fetchRandomMovie = async () => {\r\n  const randomMovieData: MovieData = {\r\n    title: null,\r\n    overview: null,\r\n    date: null,\r\n    poster: null,\r\n    id: null,\r\n  }\r\n\r\n  let totalPages = 0\r\n  let totalResultsOnPage = 0\r\n\r\n  await Axios.get(\r\n    `${MOVIE_BASE_URL}${MOVIE_POPULAR}?api_key=${MOVIE_API_KEY}&language=${MOVIE_LANGUAGE.RU}`\r\n  ).then(resp => {\r\n    totalPages = resp.data.total_pages\r\n    totalResultsOnPage = resp.data.results.length\r\n  })\r\n\r\n  const randomPage = generateRandomNumber(totalPages)\r\n  const randomMovie = generateRandomNumber(totalResultsOnPage)\r\n\r\n  const result = await Axios.get(\r\n    `${MOVIE_BASE_URL}${MOVIE_POPULAR}?api_key=${MOVIE_API_KEY}&language=${MOVIE_LANGUAGE.RU}&page=${randomPage}`\r\n  ).then(resp => resp.data.results[randomMovie])\r\n\r\n  randomMovieData.title = result.title\r\n  randomMovieData.overview = result.overview\r\n  randomMovieData.date = result.release_date.slice(0, 4)\r\n  randomMovieData.poster = `${MOVIE_IMAGE_URL}${result.poster_path}`\r\n  randomMovieData.id = result.id\r\n\r\n  return randomMovieData\r\n}\r\n\r\nexport const fetchDogImage = async () => {\r\n  const result = await Axios.get(RANDOM_DOG_IMAGE_URL)\r\n  return result.data.message\r\n}\r\n","export const generateRandomNumber = (num: number) => {\r\n  return Math.floor(Math.random() * num)\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchDogImage } from '../../api'\r\n\r\nconst Main: React.FC = () => {\r\n  const [image, setImage] = useState<string>('')\r\n  const [isLoadingDogImage, setIsLoadingDogImage] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    loadDogImage()\r\n  }, [])\r\n\r\n  const loadDogImage = async () => {\r\n    setIsLoadingDogImage(true)\r\n    setImage(await fetchDogImage())\r\n    setIsLoadingDogImage(false)\r\n  }\r\n\r\n  const changeImage = () => {\r\n    loadDogImage()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex mt-3'>\r\n        <button type='button' className='btn btn-outline-success mx-auto' onClick={changeImage}>\r\n          Гав\r\n        </button>\r\n      </div>\r\n      {isLoadingDogImage ? (\r\n        <div className='d-flex mt-3'>\r\n          <div className='spinner-border text-success mx-auto' role='status'></div>\r\n        </div>\r\n      ) : (\r\n        <img src={image} className='rounded mx-auto d-block mt-3 dog' alt='' />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport const Clock: React.FC = () => {\r\n  const [time, setTime] = useState<TimerHandler>(new Date().toLocaleTimeString())\r\n\r\n  useEffect(() => {\r\n    const tick = setInterval(timeHandler, 1000)\r\n    return () => {\r\n      clearInterval(tick)\r\n    }\r\n  }, [])\r\n\r\n  const timeHandler = () => setTime(new Date().toLocaleTimeString())\r\n\r\n  return <>{time}</>\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Clock } from '../Clock/Clock'\r\n\r\nexport const Nav: React.FC = () => {\r\n  return (\r\n    <>\r\n      <nav className='navbar navbar-light bg-dark'>\r\n        <NavLink className='navbar-brand text-light ' to='/'>\r\n          Type Script\r\n        </NavLink>\r\n        <ul className='nav justify-content-end flex-grow-1'>\r\n          <li className='nav-item'>\r\n            <NavLink className='nav-link text-white bg-dark' to='/todos'>\r\n              Список дел\r\n            </NavLink>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <NavLink className='nav-link text-white bg-dark' to='/movie'>\r\n              Что посмотреть\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <span className='navbar-text text-success pl-1'>\r\n          <Clock />\r\n        </span>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\ntype TodoInputProps = {\r\n  title: string\r\n  onChangeHandler(event: React.ChangeEvent<HTMLInputElement>): void\r\n  onKeyPressHandler(event: React.KeyboardEvent): void\r\n  onAddHandler(): void\r\n  onClearHandler(): void\r\n}\r\n\r\nexport const TodoInput: React.FC<TodoInputProps> = ({\r\n  title,\r\n  onChangeHandler,\r\n  onKeyPressHandler,\r\n  onClearHandler,\r\n  onAddHandler,\r\n}) => {\r\n  return (\r\n    <>\r\n      <label htmlFor='basic-url'>Введите дело</label>\r\n      <div className='input-group mb-3'>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          id='basic-url'\r\n          aria-describedby='basic-addon3'\r\n          placeholder='Введите название дела'\r\n          value={title}\r\n          onChange={onChangeHandler}\r\n          onKeyPress={onKeyPressHandler}\r\n        />\r\n        <div className='input-group-append' role='button' onClick={onClearHandler}>\r\n          <span className='input-group-text font-weight-bold h1'>&times;</span>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type='button'\r\n        className='btn btn-primary mb-3'\r\n        onClick={onAddHandler}\r\n        disabled={title === ''}\r\n      >\r\n        Добавить\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/trash.03e08d54.svg\";","import React from 'react'\r\nimport trashIcon from '../../assets/trash.svg'\r\nimport { TodoItem } from '../../Types/Todos'\r\n\r\ntype TodoListProps = {\r\n  todos: TodoItem[]\r\n  onToogleHandler(id: number): void\r\n  onRemoveHandler(id: number): void\r\n}\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onToogleHandler, onRemoveHandler }) => {\r\n  const TodoItem = (todo: TodoItem) => {\r\n    return (\r\n      <li className='list-group-item'>\r\n        <input\r\n          className='form-check-input'\r\n          type='checkbox'\r\n          checked={todo.completed}\r\n          onChange={() => onToogleHandler(todo.id)}\r\n        />\r\n        {todo.completed ? <s>{todo.title}</s> : todo.title}\r\n        <span className='float-right' role='button' onClick={() => onRemoveHandler(todo.id)}>\r\n          <img src={trashIcon} alt='' />\r\n        </span>\r\n      </li>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <ul className='list-group list-group-flush'>\r\n        {todos?.map((item: TodoItem) => {\r\n          return <TodoItem {...item} key={item.id} />\r\n        })}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { TodoItem } from '../../Types/Todos'\r\nimport { TodoInput } from './TodoInput'\r\nimport { TodoList } from './TodoList'\r\n\r\nexport const TodosContainer: React.FC = () => {\r\n  const [title, setTitle] = useState<string>('')\r\n  const [todos, setTodos] = useState<TodoItem[]>([])\r\n\r\n  useEffect(() => {\r\n    const savedTodos: TodoItem[] = JSON.parse(localStorage.getItem('todos') || '[]')\r\n    setTodos(savedTodos)\r\n  }, [])\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const addTodo = (title: string) => {\r\n    const newTodo: TodoItem = {\r\n      id: +new Date(),\r\n      title: title,\r\n      completed: false,\r\n    }\r\n    if (title) {\r\n      setTodos([...todos, newTodo])\r\n    }\r\n    setTitle('')\r\n  }\r\n\r\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value)\r\n  }\r\n\r\n  const onKeyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      addTodo(title)\r\n    }\r\n  }\r\n\r\n  const onClearHandler = () => setTitle('')\r\n\r\n  const onAddHandler = () => addTodo(title)\r\n\r\n  const onToogleHandler = (id: number) => {\r\n    setTodos(\r\n      todos.map((todo: TodoItem) => {\r\n        if (todo.id === id) todo.completed = !todo.completed\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n\r\n  const onRemoveHandler = (id: number) => {\r\n    const checkDelete = window.confirm('Вы действительно хотите удалить дело?')\r\n\r\n    if (checkDelete) {\r\n      setTodos(\r\n        todos.filter((todo: TodoItem) => {\r\n          return todo.id !== id\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-9 pt-3'>\r\n            <TodoInput\r\n              title={title}\r\n              onChangeHandler={onChangeHandler}\r\n              onKeyPressHandler={onKeyPressHandler}\r\n              onClearHandler={onClearHandler}\r\n              onAddHandler={onAddHandler}\r\n            />\r\n            <TodoList\r\n              todos={todos}\r\n              onToogleHandler={onToogleHandler}\r\n              onRemoveHandler={onRemoveHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchRandomMovie } from '../../api'\r\nimport { MovieData } from '../../Types/Movie'\r\n\r\nexport const MovieContainer: any = () => {\r\n  const [movieData, setMovieData] = useState<MovieData>(null)\r\n  const [isLoadingMovieData, setIsLoadingMovieData] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    loadMovieData()\r\n  }, [])\r\n\r\n  const loadMovieData = async () => {\r\n    setIsLoadingMovieData(true)\r\n    setMovieData(await fetchRandomMovie())\r\n    setIsLoadingMovieData(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoadingMovieData ? (\r\n        <div className='d-flex mt-3'>\r\n          <div className='spinner-border text-success mx-auto' role='status'></div>\r\n        </div>\r\n      ) : (\r\n        <div className='card mb-3'>\r\n          <div className='row no-gutters'>\r\n            <div className='col-md-4'>\r\n              <img src={`${movieData?.poster}`} className='card-img poster-movie' alt='' />\r\n            </div>\r\n            <div className='col-md-8'>\r\n              <div className='card-body'>\r\n                <h5 className='card-title'>{`${movieData?.title} (${movieData?.date})`}</h5>\r\n                <p className='card-text'>{`${movieData?.overview}`}</p>\r\n                <p className='card-text'>\r\n                  <a\r\n                    href={`https://www.themoviedb.org/movie/${movieData?.id}`}\r\n                    className='btn btn-primary mr-2'\r\n                    target='_blank'\r\n                    rel='noreferrer'\r\n                  >\r\n                    Перейти к просмотру\r\n                  </a>\r\n                  <button type='button' className='btn btn-secondary' onClick={loadMovieData}>\r\n                    Го некст\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\nimport { Route, Switch } from 'react-router'\n\nimport Main from './Components/Main/Main'\nimport { Nav } from './Components/Nav/Nav'\nimport { TodosContainer } from './Components/Todos/TodosContainer'\nimport { MovieContainer } from './Components/Movie/MovieContainer'\nimport './index.css'\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Nav />\n      <Switch>\n        <Route path='/todos'>\n          <TodosContainer />\n        </Route>\n        <Route path='/movie'>\n          <MovieContainer />\n        </Route>\n        <Route path='/'>\n          <Main />\n        </Route>\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}